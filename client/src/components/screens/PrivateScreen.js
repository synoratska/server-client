import { useState, useEffect } from "react";import axios from "axios";import "./PrivateScreen.css";import {Link} from "react-router-dom";const PrivateScreen = ({ history }) => {    const [error, setError] = useState("");    const [privateData, setPrivateData] = useState("");    useEffect(() => {        if(!localStorage.getItem('authToken')) {            history.push('/login')        }        const fetchPrivateData = async() => {            const config = {                headers: {                    'Content-Type': "application/json",                    Authorization: `Bearer ${localStorage.getItem('authToken')}`                }            }            try {                const  {data} = await axios.get(                    '/api/private',                    config                )                setPrivateData(data.data)            } catch(error) {            localStorage.removeItem('authToken')                setError('You are not authorized, please login')            }        }        fetchPrivateData()    }, [history])    const logoutHandler = () => {        localStorage.removeItem('authToken')        history.push('/login')    }   return(        error ? (            <span className="error-message">{error}</span>        ) : (            <>                <div className="navbar">                    <div className="container">                        <nav className="navbar__nav">                            <h3>                                <Link to="/">                                    Server Client App                                </Link>                            </h3>                            <ul className="nav__links">                                <li className="links__link">                                    <Link to="/" onClick={logoutHandler}>Logout</Link>                                </li>                            </ul>                        </nav>                    </div>                </div>            </>        )   )}export default PrivateScreen