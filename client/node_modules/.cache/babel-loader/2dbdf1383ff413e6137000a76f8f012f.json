{"ast":null,"code":"var _jsxFileName = \"D:\\\\sigma_test_task\\\\client\\\\src\\\\components\\\\screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport './RegisterScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = ({\n  history\n}) => {\n  _s();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (localStorage.getItem('authToken')) {\n      history.push('/');\n    }\n  }, [history]);\n\n  const registerHandler = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmPassword) {\n      setPassword('');\n      setConfirmPassword('');\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n      return setError('Passwords do not match');\n    }\n\n    try {\n      const {\n        data\n      } = await axios.post('/api/auth/register', {\n        firstName,\n        lastName,\n        username,\n        email,\n        password\n      }, config);\n      localStorage.setItem('authToken', data.token);\n      history.push('/');\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerHandler,\n      className: \"register-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"register-screen__title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fistName\",\n          children: \"First Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"firstName\",\n          placeholder: \"First Name\",\n          value: firstName,\n          onChange: e => setFirstName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"lastName\",\n          placeholder: \"Last Name\",\n          value: lastName,\n          onChange: e => setLastName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"name\",\n          placeholder: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          id: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"password\",\n          autoComplete: \"true\",\n          placeholder: \"Enter password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"confirmPassword\",\n          autoComplete: \"true\",\n          placeholder: \"Confirm password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"register-screen__subtext\",\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \" Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterScreen, \"0tbh1PkjmAFRoyQ7G4nRXjzNHmU=\");\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["D:/sigma_test_task/client/src/components/screens/RegisterScreen.js"],"names":["useState","useEffect","axios","Link","RegisterScreen","history","firstName","setFirstName","lastName","setLastName","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","localStorage","getItem","push","registerHandler","e","preventDefault","config","headers","setTimeout","data","post","setItem","token","response","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\rimport axios from 'axios'\rimport { Link } from \"react-router-dom\"\rimport './RegisterScreen.css'\r\rconst RegisterScreen = ({ history }) => {\r\r    const [firstName, setFirstName] = useState('')\r    const [lastName, setLastName] = useState('')\r    const [username, setUsername] = useState('')\r    const [email, setEmail] = useState('')\r    const [password, setPassword] = useState('')\r    const [confirmPassword, setConfirmPassword] = useState('')\r    const [error, setError] = useState('')\r\r    useEffect(() => {\r        if(localStorage.getItem('authToken')) {\r            history.push('/')\r        }\r    }, [history])\r\r\r    const registerHandler = async(e) => {\r        e.preventDefault()\r\r        const config = {\r            headers: {\r                \"Content-Type\": \"application/json\"\r            }\r        }\r        if (password !== confirmPassword) {\r            setPassword('')\r            setConfirmPassword('')\r            setTimeout(() => {\r                setError('')\r            }, 5000)\r            return setError('Passwords do not match')\r        }\r        try {\r            const { data } = await axios\r                .post('/api/auth/register', {\r                    firstName,\r                    lastName,\r                    username,\r                    email,\r                    password\r                },\r                    config\r                )\r\r            localStorage.setItem('authToken', data.token)\r\r            history.push('/')\r        } catch(error) {\r            setError(error.response.data.error)\r            setTimeout(() => {\r                setError('')\r            }, 5000)\r        }\r    }\r\r    return(\r    <div className=\"register-screen\">\r        <form onSubmit={registerHandler} className=\"register-screen__form\">\r            <h3 className=\"register-screen__title\">Register</h3>\r            {error && <span className=\"error-message\">{error}</span>}\r\r            <div className=\"form-group\">\r                <label htmlFor=\"fistName\">First Name: </label>\r                <input\r                    type=\"text\"\r                    required\r                    id=\"firstName\"\r                    placeholder=\"First Name\"\r                    value={firstName}\r                    onChange={(e) => setFirstName(e.target.value)}\r                />\r            </div>\r\r            <div className=\"form-group\">\r                <label htmlFor=\"lastName\">Last Name: </label>\r                <input\r                    type=\"text\"\r                    required\r                    id=\"lastName\"\r                    placeholder=\"Last Name\"\r                    value={lastName}\r                    onChange={(e) => setLastName(e.target.value)}\r                />\r            </div>\r\r            <div className=\"form-group\">\r                <label htmlFor=\"name\">Username: </label>\r                <input\r                    type=\"text\"\r                    required\r                    id=\"name\"\r                    placeholder=\"username\"\r                    value={username}\r                    onChange={(e) => setUsername(e.target.value)}\r                />\r            </div>\r\r            <div className=\"form-group\">\r                <label htmlFor=\"email\">Email:</label>\r                <input\r                    type=\"email\"\r                    required\r                    id=\"email\"\r                    placeholder=\"Enter email\"\r                    value={email}\r                    onChange={(e) => setEmail(e.target.value)}\r                />\r            </div>\r\r            <div className=\"form-group\">\r                <label htmlFor=\"password\">Password:</label>\r                <input\r                    type=\"password\"\r                    required\r                    id=\"password\"\r                    autoComplete=\"true\"\r                    placeholder=\"Enter password\"\r                    value={password}\r                    onChange={(e) => setPassword(e.target.value)}\r                />\r            </div>\r\r            <div className=\"form-group\">\r                <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r                <input\r                    type=\"password\"\r                    required\r                    id=\"confirmPassword\"\r                    autoComplete=\"true\"\r                    placeholder=\"Confirm password\"\r                    value={confirmPassword}\r                    onChange={(e) => setConfirmPassword(e.target.value)}\r                />\r            </div>\r\r            <button type=\"submit\" className=\"btn btn-primary\">\r                Register\r            </button>\r            <span\r                className=\"register-screen__subtext\">\r                Already have an account?\r                <Link to=\"/login\"> Login</Link>\r            </span>\r\r        </form>\r    </div>\r    )\r}\r\r\rexport default RegisterScreen"]},"metadata":{},"sourceType":"module"}