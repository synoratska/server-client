{"ast":null,"code":"var _jsxFileName = \"D:\\\\sigma_test_task\\\\client\\\\src\\\\components\\\\screens\\\\PrivateScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./PrivateScreen.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PrivateScreen = ({\n  history\n}) => {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [privateData, setPrivateData] = useState(\"\");\n  useEffect(() => {\n    if (!localStorage.getItem('authToken')) {\n      history.push('/login');\n    }\n\n    const fetchPrivateData = async () => {\n      const config = {\n        headers: {\n          'Content-Type': \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem('authToken')}`\n        }\n      };\n\n      try {\n        const {\n          data\n        } = await axios.get('/api/private', config);\n        setPrivateData(data.data);\n      } catch (error) {\n        localStorage.removeItem('authToken');\n        setError('You are not authorized, please login');\n      }\n    };\n\n    fetchPrivateData();\n  }, [history]);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('authToken');\n    history.push('/login');\n  };\n\n  return error ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"navbar__nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Server Client App\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav__links\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"links__link\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                onClick: logoutHandler,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(PrivateScreen, \"LKgiR0Mkx7vvWCEqb9wbXK/J2yU=\");\n\n_c = PrivateScreen;\nexport default PrivateScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateScreen\");","map":{"version":3,"sources":["D:/sigma_test_task/client/src/components/screens/PrivateScreen.js"],"names":["useState","useEffect","axios","Link","PrivateScreen","history","error","setError","privateData","setPrivateData","localStorage","getItem","push","fetchPrivateData","config","headers","Authorization","data","get","removeItem","logoutHandler"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACS,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAJ,EAAuC;AACnCN,MAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACH;;AAED,UAAMC,gBAAgB,GAAG,YAAW;AAChC,YAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAELC,UAAAA,aAAa,EAAG,UAASN,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkC;AAFtD;AADE,OAAf;;AAOA,UAAI;AACA,cAAO;AAACM,UAAAA;AAAD,YAAS,MAAMf,KAAK,CAACgB,GAAN,CAClB,cADkB,EAElBJ,MAFkB,CAAtB;AAIAL,QAAAA,cAAc,CAACQ,IAAI,CAACA,IAAN,CAAd;AACH,OAND,CAME,OAAMX,KAAN,EAAa;AACfI,QAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB;AACIZ,QAAAA,QAAQ,CAAC,sCAAD,CAAR;AACH;AACJ,KAlBD;;AAoBAM,IAAAA,gBAAgB;AACnB,GA1BQ,EA0BN,CAACR,OAAD,CA1BM,CAAT;;AA4BA,QAAMe,aAAa,GAAG,MAAM;AACxBV,IAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB;AACAd,IAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACH,GAHD;;AAKD,SACKN,KAAK,gBACD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA,cAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,UADC,gBAGD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,mCACI;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,GAAT;AAAa,gBAAA,OAAO,EAAEc,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBAJT;AAyBF,CA9DD;;GAAMhB,a;;KAAAA,a;AAgEN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\rimport axios from \"axios\";\rimport \"./PrivateScreen.css\";\rimport {Link} from \"react-router-dom\";\r\rconst PrivateScreen = ({ history }) => {\r    const [error, setError] = useState(\"\");\r    const [privateData, setPrivateData] = useState(\"\");\r\r    useEffect(() => {\r        if(!localStorage.getItem('authToken')) {\r            history.push('/login')\r        }\r\r        const fetchPrivateData = async() => {\r            const config = {\r                headers: {\r                    'Content-Type': \"application/json\",\r                    Authorization: `Bearer ${localStorage.getItem('authToken')}`\r                }\r            }\r\r            try {\r                const  {data} = await axios.get(\r                    '/api/private',\r                    config\r                )\r                setPrivateData(data.data)\r            } catch(error) {\r            localStorage.removeItem('authToken')\r                setError('You are not authorized, please login')\r            }\r        }\r\r        fetchPrivateData()\r    }, [history])\r\r    const logoutHandler = () => {\r        localStorage.removeItem('authToken')\r        history.push('/login')\r    }\r\r   return(\r        error ? (\r            <span className=\"error-message\">{error}</span>\r        ) : (\r            <>\r                <div className=\"navbar\">\r                    <div className=\"container\">\r                        <nav className=\"navbar__nav\">\r                            <h3>\r                                <Link to=\"/\">\r                                    Server Client App\r                                </Link>\r                            </h3>\r\r                            <ul className=\"nav__links\">\r                                <li className=\"links__link\">\r                                    <Link to=\"/\" onClick={logoutHandler}>Logout</Link>\r                                </li>\r                            </ul>\r                        </nav>\r                    </div>\r                </div>\r            </>\r        )\r   )\r}\r\rexport default PrivateScreen"]},"metadata":{},"sourceType":"module"}